# Generated by Django 4.2 on 2024-10-05 07:39

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('country_name', models.CharField(max_length=255)),
                ('security_number', models.IntegerField()),
                ('ticker', models.CharField(max_length=50)),
                ('id_bb_unique', models.CharField(max_length=255)),
                ('id_bb_company', models.CharField(max_length=50)),
                ('security_type', models.CharField(max_length=50)),
                ('market_status', models.CharField(max_length=50)),
                ('exchange_country_id', models.IntegerField()),
                ('domicile_id', models.IntegerField()),
                ('industry_sector_num', models.IntegerField()),
                ('industry_group_num', models.IntegerField()),
                ('industry_subgroup_num', models.IntegerField()),
                ('revision', models.IntegerField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('flag', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='CreditRatingReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_reports', to='report_generator.company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_reports', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CompanyFinancialRatios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fiscal_year', models.IntegerField()),
                ('latest_update_date', models.DateField(default=django.utils.timezone.now)),
                ('shareholders_equity', models.FloatField(blank=True, null=True)),
                ('cash_and_cash_equivalents', models.FloatField(blank=True, null=True)),
                ('total_current_asset', models.FloatField(blank=True, null=True)),
                ('total_current_liab', models.FloatField(blank=True, null=True)),
                ('long_term_debt', models.FloatField(blank=True, null=True)),
                ('short_term_investment', models.FloatField(blank=True, null=True)),
                ('other_short_term_liab', models.FloatField(blank=True, null=True)),
                ('shares_outstanding', models.FloatField(blank=True, null=True)),
                ('current_debt', models.FloatField(blank=True, null=True)),
                ('total_asset', models.FloatField(blank=True, null=True)),
                ('total_equity', models.FloatField(blank=True, null=True)),
                ('total_liab', models.FloatField(blank=True, null=True)),
                ('net_income', models.FloatField(blank=True, null=True)),
                ('total_revenue', models.FloatField(blank=True, null=True)),
                ('inventory', models.FloatField(blank=True, null=True)),
                ('investment_in_assets', models.FloatField(blank=True, null=True)),
                ('net_debt', models.FloatField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='financial_ratios', to='report_generator.company')),
            ],
        ),
    ]
